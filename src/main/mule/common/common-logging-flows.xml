<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tls="http://www.mulesoft.org/schema/mule/tls" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd">

		<flow name="common-logging-flow" doc:id="96137d27-d847-4595-b2f0-a68d096bcfdb" >
		
		<async doc:name="Async" doc:id="55977e85-94a5-4c57-bef6-bcfbcfa1caa6" >
			<ee:transform doc:name="DW: Anypoint Logging" doc:id="09b1594b-0be8-4fa2-bac7-c4c2272e442b">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
import * from dw::util::Timer
output application/json
var timeInMillisSinceEpochVar = currentMilliseconds()
var loggingPayloadVar = 	if ((not isEmpty(payload)) and contains(typeOf(payload), "Object")) payload
							else if ((not isEmpty(payload)) and contains(typeOf(payload), "Array"))  { "list": payload }
							else if ((not isEmpty(payload)) and contains(typeOf(payload), "String")) { "stringPayload": payload }
							else if ((not isEmpty(payload)) and contains(typeOf(payload), "Boolean")) { "booleanPayload": payload }
							else if ((not isEmpty(payload)) and contains(typeOf(payload), "Number")) { "numberPayload": payload }
							else { "defaultPayload": payload default {} }

---
{
	AppName: p('app.name'),
	CorrelationId: vars.logCorrelationId,
	EntityName: vars.logEntityName default 'XERO',
	Environment: vars.logEnvironment default 'dev',
	Source: vars.logSource default 'XERO',
	Target: vars.logTarget default 'DATA_CLOUD',
	OperationType: vars.logOperationType default 'GET_RECORDS',
    "@timestamp": now(),
    timeInMillisSinceEpoch: timeInMillisSinceEpochVar,
    LogStep: vars.step.logStep default 'FETCH',
    Status: vars.step.status default 'SUCCESS',
    Data: if(!isEmpty(error.muleMessage.typedValue)) 
             error.muleMessage.typedValue.^raw as String
          else if (!isEmpty(error.description)) 
             error.description as String  default "Error occured. Transaction failed to process."
          else (payload.^raw as String default 'Default mulesoft message')
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<logger level="INFO" doc:name="Logger" doc:id="ef99fb87-fbd9-4325-82ec-2d89e5d64cdf" message="#[payload]"/>
		</async>
	</flow>
	<sub-flow name="build-common-logging-properties"  doc:id="fc5b66c2-477b-41b4-b535-d8cc710d52dc">
	   <logger level="INFO" message="logging parameters capture flow"/>
	   <ee:transform doc:name="Build Logging Parameters" doc:id="f448024f-c1d5-4482-8bfa-a7f2f546aef3">
			<ee:message/>
			<ee:variables>
				<ee:set-variable variableName="logEntityName" ><![CDATA[%dw 2.0
import * from dw::core::Strings
output application/java
---
attributes.headers.'x-entity-name' default "UNKNOWN"]]></ee:set-variable>
				<ee:set-variable variableName="logEnvironment"><![CDATA[%dw 2.0
output application/java
---
upper(p('mule.env'))]]></ee:set-variable>
				<ee:set-variable variableName="logSource"><![CDATA[%dw 2.0
output application/java
---

attributes.headers.'x-source' default "UNKNOWN"
]]></ee:set-variable>
				<ee:set-variable variableName="logOperationType"><![CDATA[%dw 2.0
output application/java
---
attributes.headers.'x-operation-type' default "UNKNOWN"
]]></ee:set-variable>
				<ee:set-variable variableName="logCorrelationId"><![CDATA[%dw 2.0
output application/java
---
attributes.headers.'x-correlation-id' default correlationId

]]></ee:set-variable>
	<ee:set-variable variableName="logEntityId"><![CDATA[%dw 2.0
import * from dw::core::Strings
output application/java
---
attributes.headers.'x-entity-id' default write({EdmID:"",SalesforceID:"",BeaconID:"",BoardExID:"",CapIqID:"",SovrenID:"",LinkedInID:"",CrmID:"",PitchBookID: ""}, 'application/json')]]>	
</ee:set-variable>
				<ee:set-variable variableName="logParentEntityId" ><![CDATA[%dw 2.0
import * from dw::core::Strings
output application/java
---
attributes.headers.'x-parent-entity-id' default write({EdmID:"",SalesforceID:"",BeaconID:"",BoardExID:"",CapIqID:"",SovrenID:"",LinkedInID:"",CrmID:"",PitchBookID: ""}, 'application/json')]]></ee:set-variable>
				<ee:set-variable variableName="logTarget" ><![CDATA[%dw 2.0
output application/java
---
attributes.headers.'x-target' default p('receiver.name')]]></ee:set-variable>
				<ee:set-variable variableName="logDivision" ><![CDATA[%dw 2.0
output application/java
---
p('division')]]></ee:set-variable>
				<ee:set-variable variableName="logTransactionType" ><![CDATA[%dw 2.0
output application/java
---
(attributes.headers.'x-entity-name' default "") ++ "-" ++ attributes.method ++ "-" ++ attributes.uriParams.entityName
]]></ee:set-variable>
				<ee:set-variable variableName="logIndexName" ><![CDATA[%dw 2.0
output application/java
---
p('index.name')]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</sub-flow>
    
    <sub-flow name="sf-get-aduro_transaction_id">
        <choice doc:name="Check transaction_id sources">
            <when expression="#[isEmpty(attributes.headers['x-transaction-id']) and isEmpty(attributes.headers['X-Transaction-ID'])]">
                <set-variable variableName="aduro_transaction_id" value="#[correlationId]" doc:name="Generate aduro_transaction_id"/>
            </when>
            <otherwise>
                <set-variable variableName="aduro_transaction_id" value="#[if(not isEmpty(attributes.headers['x-transaction-id'])) attributes.headers.'x-transaction-id' else if (not isEmpty(attributes.headers['X-Transaction-ID'])) attributes.headers.'X-Transaction-ID' else uuid()]" doc:name="Inbound property"/>
            </otherwise>
         </choice>
    </sub-flow>
</mule>
